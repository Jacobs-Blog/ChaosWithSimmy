version: '3.8'

services:
  api:
    image: ${REGISTRY}/api:${TAG}
    container_name: products.api
    build:
      context: ./src/Api/
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    environment:
      ASPNETCORE_URLS: http://+:3000
      DatabaseSettings:Username: &db-user postgres
      DatabaseSettings:Password: &db-password postgres
      DatabaseSettings:Host: products-db
      DatabaseSettings:Database: &db-name ProductsDb
      ConnectionStrings:ProductsDatabase: "User ID=postgres;Password=postgres;Host=products.db;Port=5432;Database=ProductsDb;Pooling=true;"
      ChaosSettings:ExceptionSettings:Enabled: true
      ChaosSettings:ExceptionSettings:InjectionRate: 0.25
      ChaosSettings:LatencySettings:Enabled: false
      ChaosSettings:LatencySettings:InjectionRate: 0.5
      ChaosSettings:LatencySettings:MsLatency: 500
      ChaosSettings:ResultSettings:Enabled: false
      ChaosSettings:ResultSettings:InjectionRate: 0.5
      ChaosSettings:BehaviorSettings:Enabled: false 
      ChaosSettings:BehaviorSettings:InjectionRate: 0.5
    depends_on:
      - database
    restart: always
    
  database:
    image: library/postgres:11
    container_name: products.db
    environment:
      TZ: Europe/Amsterdam
      POSTGRES_USER: *db-user
      POSTGRES_PASSWORD: *db-password
      POSTGRES_DB: *db-name
    ports:
      - 5432:5432
    volumes:
      - products_db_data:/var/lib/postgresql/data
    restart: always

volumes:
  products_db_data:

    